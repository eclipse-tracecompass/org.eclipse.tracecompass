<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.linuxtools.tmf.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="org.eclipse.linuxtools.tmf.core" id="tracetype" name="TMF Trace Type"/>
      </appinfo>
      <documentation>
         This extension point is used to contribute new trace types or experiment types to the generic components of the TMF framework.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <choice minOccurs="0" maxOccurs="unbounded">
            <element ref="category"/>
            <element ref="type"/>
            <element ref="experiment"/>
         </choice>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified identifier of the target extension point
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  an optional identifier of the extension instance
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional name of the extension instance
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="category">
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique name that will be used to identify this category
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  a translatable name that will be used in the UI for this category
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="type">
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The unique ID that identifies this trace type.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  The type name as it is displayed to the end user.
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="category" type="string">
            <annotation>
               <documentation>
                  An optional attribute that is composed of the category ID. The referenced category must be declared in a corresponding category element.
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier" basedOn="org.eclipse.linuxtools.tmf.core.tracetype/category/@id"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="trace_type" type="string" use="required">
            <annotation>
               <documentation>
                  The fully qualified name of a class that implements the &lt;samp&gt;ITmfTrace&lt;/samp&gt; interface.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.tracecompass.tmf.core.trace.ITmfTrace"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="event_type" type="string" use="required">
            <annotation>
               <documentation>
                  The fully qualified name of a class that implements the &lt;samp&gt;ITmfEvent&lt;/samp&gt;  interface
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.tracecompass.tmf.core.event.ITmfEvent"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="isDirectory" type="boolean" use="default" value="false">
            <annotation>
               <documentation>
                  Indicates whether the trace type is for traces that are directories  (true) or files (false)
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="experiment">
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The unique ID that identifies this experiment type.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  The type name as it is displayed to the end user.
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="category" type="string">
            <annotation>
               <documentation>
                  An optional attribute that is composed of the category ID. The referenced category must be declared in a corresponding category element.
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier" basedOn="org.eclipse.linuxtools.tmf.core.tracetype/category/@id"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="experiment_type" type="string" use="required">
            <annotation>
               <documentation>
                  The fully qualified name of a class that extends the &lt;samp&gt;TmfExperiment&lt;/samp&gt; class
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.tracecompass.tmf.core.trace.experiment.TmfExperiment:"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         3.0
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         Example use of the tmftracetype extension point for generic CTF traces (CtfTmfTrace) and a category-less generic experiment type:

&lt;extension
      point=&quot;org.eclipse.linuxtools.tmf.core.tracetype&quot;&gt;
   &lt;category
         id=&quot;org.eclipse.linuxtools.tmf.core.category.ctf&quot;
         name=&quot;Common Trace Format&quot;&gt;
   &lt;/category&gt;
   &lt;type
         category=&quot;org.eclipse.linuxtools.tmf.core.category.ctf&quot;
         event_type=&quot;org.eclipse.linuxtools.tmf.core.ctfadaptor.CtfTmfEvent&quot;
         id=&quot;org.eclipse.linuxtools.tmf.core.type.ctf&quot;
         name=&quot;Generic CTF Trace&quot;
         trace_type=&quot;org.eclipse.linuxtools.tmf.core.ctfadaptor.CtfTmfTrace&quot;&gt;
   &lt;/type&gt;
   &lt;experiment
         id=&quot;org.eclipse.linuxtools.tmf.core.experiment.generic&quot;
         name=&quot;Generic experiment&quot;
         experiment_type=&quot;org.eclipse.linuxtools.tmf.core.trace.TmfExperiment&quot;&gt;
   &lt;/experiment&gt;
&lt;/extension&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         Trace types using this extension point have to specify the two following classes:

* trace_type: Has to implement ITmfTrace. It&apos;s *highly* recommend to extend &apos;TmfTrace&apos; to get default implementations.
* event_type: Has to implement ITmfEvent. Once again, TmfEvent provides a reference implementation that should work in most cases.

Experiment types using this extension point have to specify the following class:

* experiment_type: Has to extend TmfExperiment. This class is the default experiment class, to be used to analyse sets of traces, where each trace is treated equally.
      </documentation>
   </annotation>


   <annotation>
      <appinfo>
         <meta.section type="copyright"/>
      </appinfo>
      <documentation>
         Copyright (c) 2014 Ericsson

All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License 2.0 which accompanies this distribution, and is available at &amp;lt;a href=&amp;quot;https://www.eclipse.org/legal/epl-2.0/&amp;quot;&amp;gt;https://www.eclipse.org/legal/epl-2.0/&amp;lt;/a&amp;gt;

SPDX-License-Identifier: EPL-2.0
      </documentation>
   </annotation>

</schema>
